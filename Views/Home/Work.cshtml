@model Art.Models.IndexViewModel

@{
	ViewData["Title"] = "Eserler - " + Model.Workcat!.Title;
	int currentPage = 1;

	var sessionCurrentPage = ViewContext.HttpContext.Session.GetInt32("currentPage");

	if (sessionCurrentPage != null)
	{
		currentPage = int.Parse(sessionCurrentPage.ToString()!);
	}

	int defaultPageCount = Model.Site!.Page; //sayfabaşı listelenecek kayıt adeti vtden alıyor
	int workCount = Model.Works!.Count(); //work tablosundaki kayıt edeti
	int mod = workCount % defaultPageCount; // work tablosundaki kayıt adetinin sayfa başı ürün adetine bölümendeki kalan
	int page = workCount / defaultPageCount; // listelenecek sayfa adeti

	if (mod > 0)
	{
		page++;
	}
}

@{
	await Html.RenderPartialAsync("_Breadcrumbs");
}

<div id="colorlib-container">
	<div class="container">
		<div class="row">
			<div class="col-md-9 content">
				@if (Model.Works != null)
				{
					<div class="row row-pb-md">
						@foreach (var item in Model.Works.Skip((currentPage - 1) * defaultPageCount).Take(defaultPageCount))
						{
							<div class="col-md-6">
								<div class="blog-entry">
									<div class="blog-img">
										<a href="/work/@Methods.GenerateUrl(item.Title!)/@item.Id"><img
												src="~/uploads/images/@item.Image" class="img-responsive"
												alt="html5 bootstrap template"></a>
									</div>
									<div class="desc">
										<p class="meta">

											<span class="date">@(String.Format("{0:dd MMM yyyy}", item.Date))</span>
											<span class="pos"><i class="icon-eye text-success"></i> @item.Read </span>
											<span class="pos"><i class="fa-sharp fa-solid fa-heart text-danger"></i> @item.Like
											</span>
										</p>
										<h2><a href="/work/@Methods.GenerateUrl(item.Title!)/@item.Id">@item.Title</a></h2>
										<p>@item.Subtitle</p>
									</div>
								</div>
							</div>
						}
					</div>
				}

				<div class="row">
					<div class="col-md-12 text-center">
						@if (page > 1)
						{
							<ul class="pagination">
								<li class='@(currentPage==1?"disabled":"")'>
									@if (currentPage == 1)
									{
										<a>&laquo;</a>
									}
									else
									{
										<a
											href="~/workcat/@Methods.GenerateUrl(Model.Workcat.Title!)/@Model.Workcat.Id/@(currentPage-1)">&laquo;</a>
									}
								</li>
								@for (int i = 1; i <= page; i++)
								{
									<li class='@(currentPage==i?"active":"")'><a
											href="~/workcat/@Methods.GenerateUrl(Model.Workcat.Title!)/@Model.Workcat.Id/@i">@i</a>
									</li>
								}
								<li class='@(currentPage==page?"disabled":"")'>
									@if (currentPage == page)
									{
										<a>&raquo;</a>
									}
									else
									{
										<a
											href="~/workcat/@Methods.GenerateUrl(Model.Workcat.Title!)/@Model.Workcat.Id/@(currentPage+1)">&raquo;</a>
									}
								</li>
							</ul>
						}
					</div>
				</div>

			</div>
			<div class="col-md-3">
				@{
					await Html.RenderPartialAsync("_WorkcatSideBar");
				}


			</div>
		</div>
	</div>
</div>